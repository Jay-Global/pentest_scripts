import subprocess
import sys

# Define ANSI color codes
class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

# ASCII Art Introduction with a Box
def show_intro():
    ascii_art = f"""
{bcolors.OKBLUE}
    ************************************
    *  Tool developed by Jay-Global    *
    *  For educational purposes only   *
    ************************************{bcolors.ENDC}

"""
    print(ascii_art)

# Function to run a system command and handle errors
def run_command(command):
    try:
        result = subprocess.run(command, shell=True, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        print(bcolors.OKGREEN + result.stdout.decode('utf-8') + bcolors.ENDC)
    except subprocess.CalledProcessError as e:
        print(bcolors.FAIL + f"Error: {e.stderr.decode('utf-8')}" + bcolors.ENDC)
        sys.exit(1)

# Update system
def update_system():
    print(bcolors.HEADER + "Updating the system..." + bcolors.ENDC)
    run_command("sudo apt update && sudo apt upgrade -y")

# Check if a package is installed
def check_install(package_name):
    print(bcolors.OKCYAN + f"Checking if {package_name} is installed..." + bcolors.ENDC)
    try:
        result = subprocess.run(f"which {package_name}", shell=True, stdout=subprocess.PIPE)
        if result.returncode != 0:
            print(bcolors.WARNING + f"{package_name} not found, installing..." + bcolors.ENDC)
            install_package(package_name)
        else:
            print(bcolors.OKGREEN + f"{package_name} is already installed." + bcolors.ENDC)
    except Exception as e:
        print(bcolors.FAIL + f"An error occurred while checking for {package_name}: {e}" + bcolors.ENDC)
        sys.exit(1)

# Install a package
def install_package(package_name):
    try:
        if package_name == "metasploit-framework":
            print(bcolors.OKBLUE + f"Installing {package_name} from repository..." + bcolors.ENDC)
            run_command("sudo apt install -y metasploit-framework")
        else:
            print(bcolors.OKBLUE + f"Installing {package_name} from apt..." + bcolors.ENDC)
            run_command(f"sudo apt install -y {package_name}")
    except Exception as e:
        print(bcolors.FAIL + f"An error occurred while installing {package_name}: {e}" + bcolors.ENDC)
        sys.exit(1)

# Main function to check and install required tools
def setup_environment():
    update_system()

    # Checking and installing Nmap
    check_install("nmap")

    # Checking and installing Nikto
    check_install("nikto")

    # Checking and installing Metasploit Framework
    check_install("msfconsole")  # The command for Metasploit is "msfconsole"

    print(bcolors.OKGREEN + "All tools are set up and ready to use!" + bcolors.ENDC)

if __name__ == "__main__":
    show_intro()  # Show the ASCII art and disclaimer
    setup_environment()


